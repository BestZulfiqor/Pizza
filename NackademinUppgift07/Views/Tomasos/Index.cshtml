@model List<Matratt>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@{
    ViewData["Title"] = "Meny";
}

@functions
{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@section Scripts {
<script type="text/javascript">
    function AddToCartOnSuccess(elem, name, count) {
        const button = $(elem);
        const originalText = button.html();
        
        button.html('<i class="fas fa-check me-2"></i>Tillagd!');
        button.removeClass('btn-primary').addClass('btn-success');
        
        $('.cart-badge').text(count);
        
        setTimeout(() => {
            button.html(originalText);
            button.removeClass('btn-success').addClass('btn-primary');
        }, 2000);
    }

    function AddToCartOnFailure(elem, name) {
        const button = $(elem);
        const originalText = button.html();
        
        button.html('<i class="fas fa-times me-2"></i>Fel uppstod');
        button.removeClass('btn-primary').addClass('btn-danger');
        
        setTimeout(() => {
            button.html(originalText);
            button.removeClass('btn-danger').addClass('btn-primary');
        }, 2000);
    }

    function AddToCartAjax(elem, id, name) {
        $.ajax({
            type: "post",
            dataType: "json",
            headers: {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            url: '@Url.Action("AddToCart", "Tomasos")?id=' + id,
            success: function (result) {
                console.log(result);
                if (result.success)
                    AddToCartOnSuccess(elem, name, result.cartSize);
                else
                    AddToCartOnFailure(elem, name);
            },
            error: function (err, scnd) {
                console.error(err);
                AddToCartOnFailure(elem, name);
            }
        });
    }
</script>
}

<div class="container">
    @if (Model.Count == 0)
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>Det finns inga maträtter inom denna kategori.
        </div>
    }
    else
    {
        var groupedDishes = Model.GroupBy(m => m.MatrattTypNavigation.Beskrivning)
                                .OrderBy(g => g.Key);
        
        foreach (var group in groupedDishes)
        {
            <div class="mb-5">
                <h2 class="mb-4">
                    @{
                        var icon = group.Key.ToLower() switch
                        {
                            "pizza" => "fa-pizza-slice",
                            "pasta" => "fa-utensils",
                            "sallad" => "fa-leaf",
                            "dryck" => "fa-glass-water",
                            _ => "fa-utensils"
                        };
                    }
                    <i class="fas @icon me-2"></i>@group.Key
                </h2>
                
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                    @foreach (var dish in group.OrderBy(m => m.MatrattNamn))
                    {
                        <div class="col">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h5 class="card-title d-flex justify-content-between align-items-start">
                                        <span>@dish.MatrattNamn</span>
                                        <span class="badge bg-secondary">@dish.Pris.ToString("C")</span>
                                    </h5>
                                    <p class="card-text">@dish.Beskrivning</p>
                                    
                                    @if (dish.MatrattProdukt?.Any() == true)
                                    {
                                        <p class="card-text">
                                            <small class="text-muted">
                                                <i class="fas fa-list me-1"></i>Ingredienser:
                                                @string.Join(", ", dish.MatrattProdukt.Select(mp => mp.Produkt.ProduktNamn))
                                            </small>
                                        </p>
                                    }
                                </div>
                                <div class="card-footer bg-transparent border-0">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <button type="button" 
                                                class="btn btn-primary"
                                                onclick="AddToCartAjax(this, @dish.MatrattId, '@dish.MatrattNamn')">
                                            <i class="fas fa-cart-plus me-2"></i>Lägg till
                                        </button>
                                        
                                        @if (User.IsInRole(UserRole.Admin))
                                        {
                                            <div>
                                                <a class="btn btn-outline-warning btn-sm" 
                                                   asp-controller="Admin" 
                                                   asp-action="AlterPizza" 
                                                   asp-route-id="@dish.MatrattId">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a class="btn btn-outline-danger btn-sm" 
                                                   asp-controller="Admin" 
                                                   asp-action="RemovePizza" 
                                                   asp-route-id="@dish.MatrattId">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
</div>